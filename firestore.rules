rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent user deletion through client
    }
    
    // Restaurants are public read, admin write
    match /restaurants/{restaurantId} {
      allow read: if true;
      allow write: if false; // Only admins can modify through backend
    }
    
    // Events are public read, admin write
    match /events/{eventId} {
      allow read: if true;
      allow write: if false; // Only admins can modify through backend
    }
    
    // Lodges are public read, admin write
    match /lodges/{lodgeId} {
      allow read: if true;
      allow write: if false; // Only admins can modify through backend
    }
    
    // Plans are private to the user who created them
    match /plans/{planId} {
      allow read: if isAuthenticated() && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
  }
}